C:\Users\srkim>scala
Welcome to Scala 2.12.0 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_91).
Type in expressions for evaluation. Or try :help.

scala> 1+2
res0: Int = 3

scala> res0
res1: Int = 3

scala> res0 * 3
res2: Int = 9

scala> res0 + res1 + res2
res3: Int = 15

scala> println("Hello, world!")
Hello, world!

scala> println("Hello, world!");
Hello, world!

scala> println(res3);
15

scala> println(res4);
()

scala> println(res0);
3

scala> println()


scala> val msg = "Hello, world!"
msg: String = Hello, world!

scala> val msg2: java.lang.String = "Hello again, world!"
msg2: String = Hello again, world!

scala> val msg3: String = "Hello yet again, world!"
msg3: String = Hello yet again, world!

scala> println(msg)
Hello, world!

scala> msg = "Goodbye cruel world!"
<console>:12: error: reassignment to val
       msg = "Goodbye cruel world!"
           ^

scala> var greeting = "Hello, world!"
greeting: String = Hello, world!

scala> greeting = "Leave me alone, world!"
greeting: String = Leave me alone, world!

scala> greeting = "Leave me alone, world!";
greeting: String = Leave me alone, world!

scala> val multiLine =
     | "This is the next line."
multiLine: String = This is the next line.

scala> val s =
     |
     |
You typed two blank lines.  Starting a new command.

scala>

scala> val s =
     | s
<console>:12: error: recursive value s needs type
       s
       ^

scala> def max(x: Int, y: Int): Int = {
     | if(x>y) x else y }
max: (x: Int, y: Int)Int

scala> def max2(x: Int, y: Int) = if(x>y) x else y
max2: (x: Int, y: Int)Int

scala> max(3,5)
res11: Int = 5

scala>

scala>

scala> max(3,5)
res12: Int = 5

scala> def greet() = println("Hello, world!")
greet: ()Unit

scala> :quit
